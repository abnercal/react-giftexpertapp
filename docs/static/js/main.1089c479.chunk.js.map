{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAOd,2BACAO,KAAK,OACLC,MAAST,EACTU,SAnBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCNlBG,EAAc,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAElC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAMF,EAAMG,IAAOJ,IACxB,+BAAMA,EAAN,O,uBCNCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAWF,GAD/C,+DAEAG,MAAOR,GAFP,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAaZY,GAbY,4CAAH,sDCIPM,EAAU,SAAC,GAAiB,IAAfb,EAAc,EAAdA,SAAc,ECDZ,SAAEA,GAAe,IAAD,EAEdpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAexC,OARAC,qBAAU,WACDlB,EAASC,GAAWkB,MAAM,SAAAC,GAAUH,EAAS,CAC1CV,KAAMa,EACNL,SAAS,SAGb,CAAEd,IAEHe,EDZ0BK,CAAcpB,GAAlCW,EAFuB,EAE5BL,KAAaQ,EAFe,EAEfA,QAErB,OACI,oCACA,wBAAIlB,UAAU,qCAAd,IAAqDI,EAArD,KACEc,GAAW,uBAAGlB,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAGHe,EAAOH,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eAAaY,IAAMZ,EAAIC,IAAUD,UEG1Ca,EAjBM,WAAO,IAAD,EACW1C,mBAAS,CAAC,cADrB,mBAClB2C,EADkB,KACN5C,EADM,KAGzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACG4C,EAAWf,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAASqB,IAAKrB,EAAUA,SAAUA,UCT5CwB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.1089c479.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setinputValue(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); // prevenir el refrescamiento de toda la app y solo que se refresque una seccion\n\n        if (inputValue.trim().length > 2 ) {\n            setCategories(cats => [inputValue, ...cats]);\n            setinputValue('');\n        }\n        \n    };\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n            type=\"text\"\n            value = {inputValue}\n            onChange={ handleInputChange }\n            />\n        </form>\n    )\n\n    \n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n  };","import React from 'react'\n\nexport const GifGridItem = ( { title, url } ) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\" >\n            <img src={ url } alt = {title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","\nexport const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=PUcro1OzWML07YM8VJbnKob9Kb1QREc8`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n};","import React from 'react';\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\n\nexport const GifGrid = ( {category}) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\n        <div className=\"card-grid\">\n\n                {\n                    images.map( img => (\n                        <GifGridItem key={ img.id } { ...img }/>\n                    ))\n                }\n                \n        </div>\n        </>\n    )\n}\n","\nimport {useState, useEffect} from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(()=> {\n             getGifs( category ).then( imgs => { setState({\n                data: imgs,\n                loading: false\n             }) \n            });\n         }, [ category ])\n\n    return state;\n}\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"One Punch\"]);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}